{"version":3,"sources":["webpack:///src/app/components/Alerts/Danger/danger-alert.component.ts","webpack:///src/environments/environment.ts","webpack:///src/client/fake-database.service.ts","webpack:///src/app/pages/login/login.component.ts","webpack:///src/app/pages/login/login.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/pages/current-status/current-status.component.ts","webpack:///src/app/pages/current-status/current-status.component.html","webpack:///src/client/mock-api.service.ts","webpack:///src/app/app.module.ts","webpack:///src/app/guard/auth.guard.ts","webpack:///src/app/pages/nested-data/nested-data.component.ts","webpack:///src/app/pages/nested-data/nested-data.component.html","webpack:///src/app/services/authentication.service.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["DangerAlert","faExclamationTriangle","faTimes","className","elements","document","getElementsByClassName","length","parentNode","removeChild","onRemoveNotification","selector","template","styleUrls","alertMsg","environment","production","apiUrl","FakeDatabaseService","auth","id","username","password","email","policies","polId","num","amount","userId","description","policiesDetails","detailsId","clientName","providedIn","LoginComponent","formBuilder","route","router","authenticationService","api","submitted","invalidLogin","users","currentUserValue","navigate","loginForm","group","required","minLength","getUser","subscribe","data","returnUrl","snapshot","queryParams","controls","invalid","i","f","value","login","onSubmit","templateUrl","AppComponent","routeLinks","label","link","title","currentUser","JSON","parse","localStorage","getItem","x","logout","CurrentStatusComponent","faCircleNotch","loading","getPolicies","MockApiService","http","SERVER_URL","get","pipe","console","log","response1","response2","response3","getPoliciesDetails","AppModule","forRoot","declarations","imports","providers","bootstrap","AuthGuard","state","currentUserSubject","url","NestedDataComponent","faChevronDown","faChevronUp","open","e","path","classList","toggle","AuthenticationService","asObservable","user","setItem","stringify","next","removeItem","routes","pathMatch","redirectTo","component","canActivate","AppRoutingModule","exports","bootstrapModule","err","error","webpackEmptyAsyncContext","req","Promise","resolve","then","Error","code","keys","module"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { Component, Input } from '@angular/core';\r\nimport * as Fa from '@fortawesome/free-solid-svg-icons';\r\n\r\n@Component({\r\n    selector: 'danger-alert',\r\n    //templateUrl: './danger-alert.component.html',\r\n    template:\r\n    `\r\n    <div class=\"alert alert-danger d-flex align-items-center\" role=\"alert\">\r\n        <span class=\"mr-3 fa-lg icon\"><fa-icon [icon]=\"faExclamationTriangle\"></fa-icon></span>\r\n        <span class=\"text\">{{alertMsg}}</span>\r\n        <a class=\"close-btn\" (click)=\"onRemoveNotification('alert')\"><fa-icon [icon]=\"faTimes\"></fa-icon></a>\r\n    </div>\r\n    `,\r\n    styleUrls: ['./danger-alert.component.scss']\r\n})\r\n\r\nexport class DangerAlert {\r\n    // FontAwesome\r\n    faExclamationTriangle = Fa.faExclamationTriangle;\r\n    faTimes = Fa.faTimes;\r\n\r\n    // Text displayed on an alert element\r\n    @Input() alertMsg: string;\r\n\r\n    constructor() {}\r\n\r\n    // Close alert popups\r\n    onRemoveNotification(className:string) {\r\n        var elements = document.getElementsByClassName(className);\r\n        while (elements.length > 0) {\r\n            elements[0].parentNode.removeChild(elements[0]);\r\n        }\r\n    }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'http://localhost:4200'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from \"@angular/core\";\nimport { InMemoryDbService } from \"angular-in-memory-web-api\";\n\n/**\n *  Fake database - Do not modify\n */\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class FakeDatabaseService implements InMemoryDbService {\n  createDb() {\n    const auth = [\n      {\n        id: 1,\n        username: \"admin\",\n        password: \"admin\",\n        email: \"admin@admin.com\",\n      },\n      {\n        id: 2,\n        username: \"guest\",\n        password: \"guest\",\n        email: \"guest@guest.com\",\n      },\n    ];\n\n    const policies = [\n      {\n        polId: 0,\n        num: \"PO0\",\n        amount: 100,\n        userId: 1,\n        description: \"Insurance policy number POO\",\n      },\n      {\n        polId: 1,\n        num: \"PO1\",\n        amount: 1000,\n        userId: 1,\n        description: \"Insurance policy number PO1\",\n      },\n      {\n        polId: 2,\n        num: \"PO2\",\n        amount: 2000,\n        userId: 1,\n        description: \"Insurance policy number PO2\",\n      },\n      {\n        polId: 3,\n        num: \"PO3\",\n        amount: 3000,\n        userId: 1,\n        description: \"Insurance policy number PO3\",\n      },\n      {\n        polId: 4,\n        num: \"PO4\",\n        amount: 4000,\n        userId: 1,\n        description: \"Insurance policy number PO4\",\n      },\n      {\n        polId: 5,\n        num: \"PO5\",\n        amount: 5000,\n        userId: 1,\n        description: \"Insurance policy number PO5\",\n      },\n      {\n        polId: 6,\n        num: \"PO6\",\n        amount: 6000,\n        userId: 1,\n        description: \"Insurance policy number PO6\",\n      },\n      {\n        polId: 7,\n        num: \"PO7\",\n        amount: 7000,\n        userId: 1,\n        description: \"Insurance policy number PO7\",\n      },\n      {\n        polId: 8,\n        num: \"PO8\",\n        amount: 8000,\n        userId: 1,\n        description: \"Insurance policy number PO8\",\n      },\n      {\n        polId: 9,\n        num: \"PO9\",\n        amount: 9000,\n        userId: 1,\n        description: \"Insurance policy number PO9\",\n      },\n\n      {\n        polId: 10,\n        num: \"P10\",\n        amount: 1100,\n        userId: 2,\n        description: \"Insurance policy number POO\",\n      },\n      {\n        polId: 22,\n        num: \"P11\",\n        amount: 1200,\n        userId: 2,\n        description: \"Insurance policy number PO1\",\n      },\n      {\n        polId: 12,\n        num: \"P12\",\n        amount: 2300,\n        userId: 2,\n        description: \"Insurance policy number PO2\",\n      },\n      {\n        polId: 13,\n        num: \"P13\",\n        amount: 3400,\n        userId: 2,\n        description: \"Insurance policy number PO3\",\n      },\n      {\n        polId: 14,\n        num: \"P14\",\n        amount: 4500,\n        userId: 2,\n        description: \"Insurance policy number PO4\",\n      },\n      {\n        polId: 15,\n        num: \"P15\",\n        amount: 5600,\n        userId: 2,\n        description: \"Insurance policy number PO5\",\n      },\n      {\n        polId: 16,\n        num: \"P16\",\n        amount: 6700,\n        userId: 2,\n        description: \"Insurance policy number PO6\",\n      },\n      {\n        polId: 17,\n        num: \"P17\",\n        amount: 7800,\n        userId: 2,\n        description: \"Insurance policy number PO7\",\n      },\n      {\n        polId: 18,\n        num: \"P18\",\n        amount: 8900,\n        userId: 2,\n        description: \"Insurance policy number PO8\",\n      },\n      {\n        polId: 19,\n        num: \"P19\",\n        amount: 9100,\n        userId: 2,\n        description: \"Insurance policy number PO9\",\n      },\n\n      {\n        polId: 20,\n        num: \"P20\",\n        amount: 9100,\n        userId: 3,\n        description: \"Insurance policy number POO\",\n      },\n      {\n        polId: 21,\n        num: \"P21\",\n        amount: 1000,\n        userId: 3,\n        description: \"Insurance policy number PO1\",\n      },\n      {\n        polId: 22,\n        num: \"P22\",\n        amount: 2000,\n        userId: 3,\n        description: \"Insurance policy number PO2\",\n      },\n      {\n        polId: 23,\n        num: \"P23\",\n        amount: 3000,\n        userId: 3,\n        description: \"Insurance policy number PO3\",\n      },\n      {\n        polId: 24,\n        num: \"P24\",\n        amount: 4000,\n        userId: 3,\n        description: \"Insurance policy number PO4\",\n      },\n      {\n        polId: 25,\n        num: \"P25\",\n        amount: 5000,\n        userId: 3,\n        description: \"Insurance policy number PO5\",\n      },\n      {\n        polId: 26,\n        num: \"P26\",\n        amount: 6000,\n        userId: 3,\n        description: \"Insurance policy number PO6\",\n      },\n      {\n        polId: 27,\n        num: \"P27\",\n        amount: 7000,\n        userId: 3,\n        description: \"Insurance policy number PO7\",\n      },\n      {\n        polId: 28,\n        num: \"P28\",\n        amount: 8000,\n        userId: 3,\n        description: \"Insurance policy number PO8\",\n      },\n      {\n        polId: 29,\n        num: \"P29\",\n        amount: 9000,\n        userId: 3,\n        description: \"Insurance policy number PO9\",\n      },\n    ];\n\n    const policiesDetails = [\n      { detailsId: 1, polId: 1, amount: 100, clientName: \"admin1\" },\n      { detailsId: 2, polId: 2, amount: 100, clientName: \"admin1\" },\n      { detailsId: 3, polId: 2, amount: 900, clientName: \"admin2\" },\n      { detailsId: 4, polId: 4, amount: 2000, clientName: \"admin1\" },\n      { detailsId: 5, polId: 4, amount: 2000, clientName: \"admin3\" },\n      { detailsId: 6, polId: 5, amount: 5000, clientName: \"admin5\" },\n      { detailsId: 7, polId: 8, amount: 4000, clientName: \"admin1\" },\n      { detailsId: 8, polId: 8, amount: 500, clientName: \"admin7\" },\n      { detailsId: 9, polId: 8, amount: 5500, clientName: \"admin8\" },\n\n      { detailsId: 11, polId: 11, amount: 100, clientName: \"admin21\" },\n      { detailsId: 12, polId: 13, amount: 100, clientName: \"admin21\" },\n      { detailsId: 13, polId: 14, amount: 900, clientName: \"admin22\" },\n      { detailsId: 14, polId: 15, amount: 2000, clientName: \"admin21\" },\n      { detailsId: 15, polId: 16, amount: 2000, clientName: \"admin23\" },\n      { detailsId: 16, polId: 17, amount: 5000, clientName: \"admin25\" },\n      { detailsId: 17, polId: 18, amount: 4000, clientName: \"admin21\" },\n      { detailsId: 18, polId: 19, amount: 500, clientName: \"admin27\" },\n\n      { detailsId: 21, polId: 11, amount: 100, clientName: \"admin31\" },\n      { detailsId: 22, polId: 13, amount: 100, clientName: \"admin31\" },\n      { detailsId: 23, polId: 14, amount: 900, clientName: \"admin32\" },\n      { detailsId: 24, polId: 15, amount: 2000, clientName: \"admin31\" },\n      { detailsId: 25, polId: 16, amount: 2000, clientName: \"admin33\" },\n      { detailsId: 26, polId: 17, amount: 5000, clientName: \"admin35\" },\n      { detailsId: 27, polId: 18, amount: 4000, clientName: \"admin31\" },\n      { detailsId: 28, polId: 19, amount: 500, clientName: \"admin37\" },\n    ];\n\n    return { auth, policies, policiesDetails };\n  }\n}\n\n// Add to Description\n// 1. add to each request the Autorization tokenName\n// 2. edit page and url params - modifie the records for specific user.\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\n\nimport { AuthenticationService } from '../../services/authentication.service';\nimport { MockApiService } from \"../../../client/mock-api.service\";\n\n@Component({\n    templateUrl: 'login.component.html',\n    styleUrls: ['./login.component.scss']\n})\n\nexport class LoginComponent implements OnInit {\n    loginForm: FormGroup;\n    submitted = false;\n    returnUrl: string;\n    invalidLogin: boolean = false;\n    users: any[] = [];\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private route: ActivatedRoute,\n        private router: Router,\n        private authenticationService: AuthenticationService,\n        private api: MockApiService\n    ) {\n        // redirect to home if already logged in\n        if (this.authenticationService.currentUserValue) {\n            this.router.navigate(['/']);\n        }\n\n        this.loginForm = this.formBuilder.group({\n            username: ['', [Validators.required, Validators.minLength(3)]],\n            password: ['', Validators.required]\n        });\n    }\n\n    ngOnInit() {\n        this.api.getUser().subscribe((data: any[]) => {\n            this.users = data;\n        })\n\n        // get return url from route parameters or default to '/'\n        this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n    }\n\n    // getter for easy access to form fields\n    get f() { return this.loginForm.controls; }\n\n    onSubmit() {\n        this.submitted = true;\n\n        // stop here if form is invalid\n        if (this.loginForm.invalid) {\n            this.invalidLogin = true;\n            return;\n        }\n\n        for(let i=0 ; i < this.users.length; i++) {\n            if (this.users[i].username === this.f.username.value && this.users[i].password === this.f.password.value) {\n                this.authenticationService.login(this.users[i]);\n                this.router.navigate([this.returnUrl]);\n                break;\n            } else {\n                this.invalidLogin = true;\n            }\n        }\n    }\n}\n","<section class=\"login-form d-flex justify-content-center align-items-center\">\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-12 col-sm-7 col-lg-5 mx-auto\">\n                <div class=\"card h-100\">\n                    <div class=\"card-body\">\n\n                        <danger-alert *ngIf=\"invalidLogin\" [alertMsg]=\"'Invalid login credentials'\"></danger-alert>\n\n                        <h2 class=\"card-title text-left font-weight-bold mb-1 title\">Login</h2>\n                        <p class=\"subtitle\">Don't have an account yet? <a class=\"link\">Sign Up!</a></p>\n                        <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n                            <div class=\"form-group\">\n                                <label class=\"mb-1 font-weight-bold title\" for=\"\">Username</label>\n                                <input type=\"text\" formControlName=\"username\" class=\"form-control\" placeholder=\"Username\" [ngClass]=\"{ 'is-invalid': submitted && f.username.errors }\" />\n                                <div *ngIf=\"submitted && f.username.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"f.username.errors.required\">Username is required</div>\n                                </div>\n                            </div>\n                            <div class=\"form-group\">\n                                <label class=\"mb-1 font-weight-bold title\" for=\"\">Password</label>\n                                <input type=\"password\" formControlName=\"password\" class=\"form-control\" placeholder=\"Password\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\n                                <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"f.password.errors.required\">Password is required</div>\n                                </div>\n                            </div>\n\n                            <button class=\"btn btn-lg btn-primary btn-block text-uppercase\" type=\"submit\" id=\"login-btn\">\n                                Login\n                            </button>\n                        </form>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"col-12 col-sm-5 col-lg-7 d-none d-sm-flex\">\n                <img class=\"w-100 p-2\" src=\"../../../assets/login.svg\" alt=\"Login Image\">\n            </div>\n        </div>\n    </div>\n</section>\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { RouterLinkI } from \"src/app/interfaces\";\n\nimport { AuthenticationService } from './services/authentication.service';\nimport { User } from './models/user';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\n\nexport class AppComponent {\n  public routeLinks: RouterLinkI[] = [\n    { label: \"Current Status\", link: \"current-status\" },\n    { label: \"Nested Data\", link: \"nested-data\" },\n  ];\n  title = 'FSL-Angular-Task';\n  currentUser:User = JSON.parse(localStorage.getItem('currentUser'));\n\n  constructor(\n    private router: Router,\n    private authenticationService: AuthenticationService\n  ) {\n      this.authenticationService.currentUser.subscribe(x => this.currentUser = x);\n  }\n\n  logout() {\n      this.authenticationService.logout();\n      this.router.navigate(['/login']);\n  }\n}\n","<main role=\"main\">\n    <div class=\"container-fluid\">\n        <div class=\"row\">\n            <nav class=\"d-flex justify-content-between\" *ngIf=\"currentUser\">\n                <div class=\"pull-left\">\n                    <a class=\"links\" *ngFor=\"let link of routeLinks\" id=\"{{ link.link }}\" routerLink=\"{{ link.link }}\" routerLinkActive=\"active-link\">\n                        {{ link.label }}\n                    </a>\n                </div>\n                <div class=\"pull-right\">\n                    <a class=\"links\" *ngIf=\"currentUser\" (click)=\"logout()\">Log Out</a>\n                </div>\n            </nav>\n        </div>\n    </div>\n\n    <router-outlet></router-outlet>\n</main>\n","import { Component, OnInit } from \"@angular/core\";\nimport { MockApiService } from \"../../../client/mock-api.service\";\nimport * as Fa from '@fortawesome/free-solid-svg-icons';\n\n@Component({\n  selector: \"current-status\",\n  templateUrl: \"./current-status.component.html\",\n  styleUrls: [\"./current-status.component.scss\"],\n})\n\nexport class CurrentStatusComponent implements OnInit {\n    // FontAwesome\n    faCircleNotch = Fa.faCircleNotch;\n\n    policies: any[] = [];\n    loading: boolean = true;\n    alertMsg: string = 'Something went wrong :( No data available.';\n\n    constructor(private api: MockApiService) {}\n\n    ngOnInit() {\n        this.api.getPolicies().subscribe((data: any[]) => {\n            this.policies = data;\n            this.loading = false;\n        })\n    }\n}\n","<div class=\"container-fluid my-3\">\n    <div class=\"row\">\n        <div class=\"col-12\">\n            <div class=\"panel p-4 mb-3\">\n\n                <div class=\"loader\" *ngIf=\"loading\">\n                    <fa-icon class=\"d-flex justify-content-center align-items-center fa-spin fa-3x\" [icon]=\"faCircleNotch\"></fa-icon>\n                </div>\n\n                <h2 class=\"panel__title\">Policies</h2>\n                <table class=\"table mb-0\" width=\"100%\" *ngIf=\"policies.length > 0\">\n                    <thead>\n                        <tr>\n                            <th>Policy Number</th>\n                            <th>Amount</th>\n                            <th>Description</th>\n                        </tr>\n                    </thead>\n\n                    <tbody>\n                        <tr *ngFor=\"let policy of policies\">\n                            <td>{{ policy.num }}</td>\n                            <td>{{ policy.amount }}</td>\n                            <td>{{ policy.description }}</td>\n                        </tr>\n                    </tbody>\n                </table>\n\n                <danger-alert *ngIf=\"policies.length === 0 && !loading\" [alertMsg]=\"'Something went wrong :( No Policies available'\"></danger-alert>\n            </div>\n        </div>\n    </div>\n</div>\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Observable, forkJoin } from \"rxjs\";\nimport { map, publishReplay, refCount } from 'rxjs/operators';\nimport { AuthI, PoliciesI, PoliciesDetailsI } from \"../app/interfaces\";\n\n/**\n *  Mock api endpoints.\n *  Use this service to connect to the fake-database to receive data\n */\n\n@Injectable({\n    providedIn: \"root\",\n})\n\nexport class MockApiService {\n    private SERVER_URL: string = \"http://localhost:4200/api\";\n\n    users: Observable<AuthI[]>;\n    policies: Observable<PoliciesI[]>;\n    policiesDetails: Observable<PoliciesDetailsI[]>;\n\n    constructor(private http: HttpClient) {}\n\n    getUser(): Observable<AuthI[]> {\n        if (!this.users) {\n            this.users = this.http.get<AuthI[]>(`${this.SERVER_URL}/auth`).pipe(\n                map(data => data),\n                publishReplay(1),\n                refCount()\n            );\n        }\n        return this.users;\n    }\n\n    //If the value of this.configs is false, send a GET request to the server. If true, skip the GET request and use the cached value.\n    getPolicies(): Observable <PoliciesI[]> {\n        if (!this.policies) {\n            console.log('new policies');\n            this.policies = this.http.get<PoliciesI[]>(`${this.SERVER_URL}/policies`).pipe(\n                map(data => data),\n                publishReplay(1), // this tells Rx to cache the latest emitted\n                refCount() // and this tells Rx to keep the Observable alive as long as there are any Subscribers\n            );\n        }\n        return this.policies;\n    }\n\n    getPoliciesDetails(): Observable <PoliciesDetailsI[]> {\n        if (!this.policiesDetails) {\n            console.log('new policies details');\n            this.policiesDetails = this.http.get<PoliciesDetailsI[]>(`${this.SERVER_URL}/policiesDetails`).pipe(\n                map(data => data),\n                publishReplay(1),\n                refCount()\n            );\n        }\n        return this.policiesDetails;\n    }\n\n    clearCacheAll() {\n        this.policies = null;\n    }\n\n    // For testing purposes only\n    public apiData(): Observable < [AuthI[], PoliciesI[], PoliciesDetailsI[]] > {\n        let response1 = this.getUser();\n        let response2 = this.getPolicies();\n        let response3 = this.getPoliciesDetails();\n        return forkJoin([response1, response2, response3]);\n    }\n}\n","import { BrowserModule } from \"@angular/platform-browser\";\nimport { NgModule } from \"@angular/core\";\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { InMemoryWebApiModule } from \"angular-in-memory-web-api\";\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\n\n// modules\nimport { AppRoutingModule } from \"./app-routing.module\";\n\n// components\nimport { AppComponent } from \"./app.component\";\nimport { CurrentStatusComponent } from \"./pages/current-status/current-status.component\";\nimport { LoginComponent } from \"./pages/login/login.component\";\nimport { NestedDataComponent } from \"./pages/nested-data/nested-data.component\";\nimport { DangerAlert } from \"./components/Alerts/Danger/danger-alert.component\";\n\n// services / providers\nimport { FakeDatabaseService } from \"../client/fake-database.service\";\nimport { MockApiService } from \"src/client/mock-api.service\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    CurrentStatusComponent,\n    NestedDataComponent,\n    DangerAlert\n  ],\n  imports: [\n    BrowserModule,\n    CommonModule,\n    FormsModule,\n    AppRoutingModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    InMemoryWebApiModule.forRoot(FakeDatabaseService),\n    FontAwesomeModule\n  ],\n  providers: [MockApiService],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\n\r\nimport { AuthenticationService } from '../services/authentication.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthGuard implements CanActivate {\r\n    constructor(\r\n        private router: Router,\r\n        private authenticationService: AuthenticationService\r\n    ) { }\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n        const currentUser = this.authenticationService.currentUserSubject;\r\n\r\n        if (currentUser.value) {\r\n            return true;\r\n        }\r\n\r\n        // not logged in so redirect to login page with the return url\r\n        this.router.navigate(['/login'], { queryParams: { returnUrl: state.url } });\r\n        return false;\r\n    }\r\n}\r\n","import { Component, OnInit } from \"@angular/core\";\nimport { MockApiService } from \"../../../client/mock-api.service\";\nimport * as Fa from '@fortawesome/free-solid-svg-icons';\n\n@Component({\n    selector: \"nested-data\",\n    templateUrl: \"./nested-data.component.html\",\n    styleUrls: [\"./nested-data.component.scss\", \"../current-status/current-status.component.scss\"],\n})\n\nexport class NestedDataComponent implements OnInit {\n    // FontAwesome\n    faChevronDown = Fa.faChevronDown;\n    faChevronUp = Fa.faChevronUp;\n    faCircleNotch = Fa.faCircleNotch;\n\n    policies: any[] = [];\n    policiesDetails: any[] = [];\n    loading: boolean = true;\n    open: boolean = false;\n\n    constructor(private api: MockApiService) {\n\n    }\n\n    ngOnInit() {\n        this.api.getPolicies().subscribe((data: any[]) => {\n            this.policies = data;\n        })\n\n        this.api.getPoliciesDetails().subscribe((data: any[]) => {\n            this.policiesDetails = data;\n            this.loading = false;\n        })\n    }\n\n    toggleTable (e) {\n        console.log(e)\n        e.path[1].classList.toggle(\"rotated\");\n        //this.open = !this.open;\n    }\n}\n","<div class=\"container-fluid my-3\">\n    <div class=\"row\">\n        <div class=\"col-12\">\n            <div class=\"panel p-4 mb-3\">\n                <div class=\"loader\" *ngIf=\"loading\">\n                    <fa-icon class=\"d-flex justify-content-center align-items-center fa-spin fa-3x\" [icon]=\"faCircleNotch\"></fa-icon>\n                </div>\n\n                <h2 class=\"panel__title\">Extended Policies Details</h2>\n                <div id=\"accordion\">\n                    <table class=\"table table-striped mb-0\" width=\"100%\" *ngIf=\"policies.length > 0\">\n                        <thead>\n                            <tr>\n                                <th>Policy Number</th>\n                                <th>Amount</th>\n                                <th>Description</th>\n                                <th class=\"text-right\">Controls</th>\n                            </tr>\n                        </thead>\n                    </table>\n\n                    <div *ngFor=\"let policy of policies\">\n                        <table class=\"table mb-0\" width=\"100%\">\n                            <tbody>\n                                <tr>\n                                    <td>{{ policy.num }}</td>\n                                    <td>{{ policy.amount }}</td>\n                                    <td>{{ policy.description }}</td>\n                                    <td class=\"text-right\">\n                                        <ng-container>\n                                            <a class=\"dropdown-icon\" (click)=\"toggleTable($event)\" data-toggle=\"collapse\" [attr.data-target]=\"'.collapse' + policy.polId\" aria-expanded=\"false\" [attr.aria-controls]=\"'collapse' + policy.polId\">\n                                                <fa-icon [icon]=\"faChevronDown\"></fa-icon>\n                                            </a>\n                                        </ng-container>\n\n\n                                        <!-- <a class=\"dropdown-icon\" data-toggle=\"collapse\" [attr.data-target]=\"'#collapse' + policy.polId\" aria-expanded=\"false\" [attr.aria-controls]=\"'collapse' + policy.polId\">\n                                            <fa-icon [icon]=\"faChevronUp\"></fa-icon>\n                                        </a> -->\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n\n                        <ng-container *ngFor=\"let detail of policiesDetails\">\n                            <div [class]=\"'collapse' + policy.polId\" class=\"collapse\" *ngIf=\"policy.polId === detail.polId\"><!--data-parent=\"#accordion\" -->\n                                <div class=\"card-body\">\n                                    <table class=\"table mb-0\" width=\"100%\">\n                                        <thead>\n                                            <tr>\n                                                <th>Client Name</th>\n                                                <th>Amount</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            <tr>\n                                                <td>{{ detail.clientName }}</td>\n                                                <td>{{ detail.amount }}</td>\n                                            </tr>\n                                        </tbody>\n                                    </table>\n                                </div>\n                            </div>\n                        </ng-container>\n                    </div>\n                </div>\n\n                <danger-alert *ngIf=\"policies.length === 0 && !loading\" [alertMsg]=\"'Something went wrong :( No Policies available'\"></danger-alert>\n            </div>\n        </div>\n    </div>\n</div>\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { User } from '../models/user';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthenticationService {\r\n    public currentUserSubject: BehaviorSubject<User>;\r\n    public currentUser: Observable<User>;\r\n\r\n    constructor(http: HttpClient) {\r\n        this.currentUserSubject = new BehaviorSubject<User>(JSON.parse(localStorage.getItem('currentUser')));\r\n        this.currentUser = this.currentUserSubject.asObservable();\r\n    }\r\n\r\n    public get currentUserValue(): User {\r\n        return this.currentUserSubject.value;\r\n    }\r\n\r\n    // add user to ls to log in\r\n    login(user: User) {\r\n        localStorage.setItem('currentUser', JSON.stringify(user));\r\n        this.currentUserSubject.next(user);\r\n        return user;\r\n    }\r\n\r\n    // remove user from local storage to log user out\r\n    logout() {\r\n        localStorage.removeItem('currentUser');\r\n        this.currentUserSubject.next(null);\r\n    }\r\n}\r\n","import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\n\nimport { CurrentStatusComponent } from \"./pages/current-status/current-status.component\";\nimport { LoginComponent } from \"./pages/login/login.component\";\nimport { NestedDataComponent } from \"./pages/nested-data/nested-data.component\";\n\n// Route Guard\nimport { AuthGuard } from \"./guard/auth.guard\";\n\nconst routes: Routes = [\n  { path: \"\", pathMatch: \"full\", redirectTo: \"current-status\" },\n  { path: \"login\", component: LoginComponent },\n  { path: \"current-status\", canActivate:[AuthGuard], component: CurrentStatusComponent },\n  { path: \"nested-data\", canActivate:[AuthGuard], component: NestedDataComponent },\n  { path: \"**\", redirectTo: \"current-status\" },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}